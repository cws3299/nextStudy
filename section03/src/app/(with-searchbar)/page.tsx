import styles from "./page.module.css";

export default function Home() {
  return <div className={styles.page}>인덱스페이지</div>;
}

// next의 appRouter 구조에서는 기본적으로 모두 서버컴포넌트로 정의됨
// 클라이언트 컴포넌트로 사용해야 하는 컴포넌트의 경우 개발자가 바꿔줘야 함

// 서버컴포넌트에서의 작업은 브라우저에서 절대 알 수 없음
// 서버사이드 렌더링 !== 서버 컴포넌트

// 서버컴포넌트 : 서버에서 1회 렌더링
// 클라이언트 컴포넌트 : 서버에서 1회, 브라우저의 hydration 단계에서 1회
// 서버컴포넌트로 충분한데 클라이언트 컴포넌트로 사용할 경우 js bundle 크기 증가 -> hydration단계에서 중복 실행되는 컴포넌트 발생 -> tti 증가
// 최상단에 "use client"; // 클라이언트 컴포넌트로 선언 <directive, 지시자 선언>

// 상호작용이 있는 경우 -> 클라이언트 컴포넌트 (서치바, 버튼 등)
// 상호작용이 불필요한 경우 -> 서버 컴포넌트 (헤더, 카드, 링크와 같이 상호작용같지만 자바스크립트 상호 작용 아닌 경우 등)

// 서버 컴포넌트는 클라이언트 컴포넌트 자녀로 import 가능
// 클라이언트 컴포넌트는 서버 컴포넌트를 명시적으로 import 불가능
// -> 1. props로 서버 컴포넌트 전달하거나, slot 패턴으로 전달
